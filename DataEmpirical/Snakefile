import os
ROOT = os.path.abspath('..')
import numpy as np
import sys
sys.path.append(ROOT)
BATCH_PATH = "{0}/scripts/hyphy_template.bf".format(ROOT)
from scripts.snakemake_module import *

EXPERIMENT = os.path.abspath('.')
experiment_array = [i for i in os.listdir(os.path.abspath('.')) if (os.path.isdir(i) and os.path.isfile(i + "/tree.newick"))]
print(experiment_array)
models = ["MG", "MF", "GTR"]

rule all:
    input: EXPERIMENT + '/merged_results.tsv'

rule filter_ali:
    output:
         EXPERIMENT + '/{experiment}/alignment.ThirdPos.fasta'
    input:
         ali=lambda w: "{0}/{1}/alignment.fasta".format(EXPERIMENT, w.experiment),
         exec=ROOT + "/scripts/filter_third_positions.py"
    shell: 'python3 {input.exec} --input {input.ali} --output {output} '

rule run_inference:
    output:
        batch=EXPERIMENT + '/{experiment}/{model}_run.bf',
        result=EXPERIMENT + '/{experiment}/{model}_run.bf_hyout.txt'
    input:
         exec=ROOT + "/scripts/hyphy_run.py",
         fasta=lambda w: "{0}/{1}/alignment{2}.fasta".format(EXPERIMENT, w.experiment, ".ThirdPos" if w.model == "GTR" else ""),
         tree=lambda w: "{0}/{1}/tree.newick".format(EXPERIMENT, w.experiment),
    benchmark: EXPERIMENT + "/{experiment}/{model}.benchmark.tsv"
    log:
         out=EXPERIMENT + '/{experiment}/{model}.stdout',
         err=EXPERIMENT + '/{experiment}/{model}.stderr'
    shell: 'python3 {input.exec} --input {BATCH_PATH} --model {wildcards.model} --fasta {input.fasta} --tree {input.tree} --output {output.batch} 2> {log.err} 1> {log.out}'

rule result_inference:
    output: EXPERIMENT + '/{experiment}/results.tsv'
    input:
         src=ROOT + "/scripts/hyphy_empirical.py",
         infer=expand(EXPERIMENT + '/{{experiment}}/{model}_run.bf_hyout.txt', model=models)
    shell:
         'python3 {input.src} --input {input.infer} --output {output}'

rule merge_results:
    output: EXPERIMENT + '/merged_results.tsv'
    input:
        src=ROOT + "/scripts/merge_tsv.py",
        results=expand(EXPERIMENT + '/{experiment}/results.tsv', experiment=experiment_array)
    shell:
        'python3 {input.src} --input {input.results} --output {output}'

